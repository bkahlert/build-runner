name: build

on:
  push:
    branches: ['master']
    tags: ['v*']
    paths-ignore: ['**.md']
  pull_request:
    branches: ['master']
    tags: ['dependencies']
    paths-ignore: ['**.md']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          echo ::set-output name=test_reports::build/test-reports

      - name: Run tests
        run: |
          chmod +x batsw
          ./batsw test \
            --report-formatter junit \
            --output "${{ steps.prep.outputs.test_reports }}"

      - name: Upload test reports
        uses: actions/upload-artifact@v2
        if: success() || failure()
        with:
          name: test-reports
          path: ${{ steps.prep.outputs.test_reports }}/*.xml

  build:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ env.IMAGE_NAME }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=edge
          labels: |
            org.opencontainers.image.vendor=BKAHLERT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        uses: docker/bake-action@v1
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          targets: image-all
          push: ${{ github.event_name != 'pull_request' }}

      - name: Check manifest
        if: github.event_name != 'pull_request'
        run: |
          docker buildx imagetools inspect ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
          docker buildx imagetools inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}

      - name: Inspect image
        if: github.event_name != 'pull_request'
        run: |
          docker pull ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
          docker image inspect ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
          docker image inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}

  publish:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Draft release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          draft: true
          body_part: CHANGELOG.md
          token: ${{ secrets.GITHUB_TOKEN }}
